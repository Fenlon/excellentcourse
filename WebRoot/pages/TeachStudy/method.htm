<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head style="font-size: 17px;">
<title></title>
<link rel="stylesheet" type="text/css" href="../../css/common.css">
<style type="text/css">
table {
	border-style: groove;
}

td {
	border-right-style: groove;
	border-bottom-style: groove;
	border-width: thin;
}

.ccc {
	text-align: center;
}
</style>
</head>
<body>
	<h1 class="ccc">教学方法</h1>
	&nbsp;&nbsp;根据课程的特点，在教学中采用3W1H 教学法、课堂设问和提问、课堂陷阱
	教学法、对比教学法等多种教学方法。经常选择一些成功与失败的项目案例让学 生参与分析，激发学生的创新思维，培养学生分析问题的能力；在教学方法上突
	出启发式、讨论式、师生互动式等形式，在课堂上注重处理好难点与重点、概念 与应用、，做到精讲多做、边讲边做、讲做结合,具体如下表。
	<h2 class="ccc">3W1H 教学方法</h2>
	<table cellpadding="0" cellspacing="0">
		<tr>
			<td style=" width:100px;">应用场合</td>
			<td>基本概念和原理的讲解、学生问题解答。</td>
		</tr>
		<tr>
			<td>目的和必要性</td>
			<td>针对刚从学校毕业的新教师，不知道如何讲清楚 一讲事情；针对讲课缺乏条理性和逻辑 性，导致论述不清楚、不透彻的教师。</td>
		</tr>
		<tr>
			<td>基本要素说明</td>
			<td>通过讲解问题的四个侧面来全面论述问题：Why — How — What — Where。例如，讲解“理发”，
				先将为何需要理发，然后用理发现场来说明是怎 么理发的，然后将理发是一项什么活动（发展过 程，例如由：“剃头”-“理发”-“美容”-“形
				象设计”的词汇、内容变迁过程），最后将何时 需要理发、何时不需要理发。</td>
		</tr>
	</table>
	<h2 class="ccc">对比教学法</h2>
	<table cellpadding="0" cellspacing="0">
		<tr>
			<td style=" width:100px;">实施要点</td>
			<td>Why：通过问题、生活例子、工程例子、要解决 的问题引入； How：演示如何通过新的方法、技术、概念来解 决问题；
				What：讲解基本概念、分析原因、特征； Where：讲解在哪些场景下使用，哪些场景下不 宜使用。</td>
		</tr>
		<tr>
			<td>应用场合</td>
			<td>前面已经有相似、相关的概念，例如Java 和.NET 相关知识的对比。</td>
		</tr>
		<tr>
			<td>目的和必要性</td>
			<td>通过对比的方式明确差异，更加方便理解。</td>
		</tr>
		<tr>
			<td>基本要素说明</td>
			<td>罗列相关的概念，重点说明差异；演示相关的代 码，指出代码的差异。</td>
		</tr>
		<tr>
			<td>实施要点</td>
			<td>关注学员的技能现状，主动为学生进行知识总 结、归纳，教员共同备课。</td>
		</tr>
		<tr>
			<td>常见的问题</td>
			<td>相关的知识没有对比，导致学生感觉重复，或者 分不清楚差异。</td>
		</tr>
	</table>
	<h2 class="ccc">问题引导教学法</h2>
	<table cellpadding="0" cellspacing="0">
		<tr>
			<td style=" width:100px;">应用场合</td>
			<td>代码讲解、代码演示。</td>
		</tr>
		<tr>
			<td>目的和必要性</td>
			<td>学生对代码容易出错的地方理解不深刻，在后续 上机、项目中持续犯错误；代码经验不够、调试 能力不够。</td>
		</tr>
		<tr>
			<td>基本要素说明</td>
			<td>把代码故意写错，通过“出问题了”来吸引学生 注意力（“抖包袱”）；在典型的、容易出错的地
				方故意犯错误，提高学生对代码、概念的理解和 认识。</td>
		</tr>
		<tr>
			<td>实施要点</td>
			<td>充分准备、避免下不了台（避免出错误了自己也 调试不通）。</td>
		</tr>
		<tr>
			<td>常见的问题</td>
			<td>从头到尾进行代码直接讲解，学生对代码理解不 深刻；学生虽然大体上理解了代码，但是被动的 理解，常见的问题依然不能解决——
				经验不够。</td>
		</tr>
	</table>
	<h2 class="ccc">任务分解教学法</h2>
	<table>
		<tr>
			<td style=" width:100px;">应用场合</td>
			<td>学生完成实践课任务。</td>
		</tr>
		<tr>
			<td>目的和必要性</td>
			<td>给学生一个复杂的问题，学生无从下手，不能解 答完成，通过“分解动作”来完成；分解大的任
				务、复杂的问题成小的问题，逐步解决，方便监 控，提升实施效果。</td>
		</tr>
		<tr>
			<td>基本要素说明 。</td>
			<td>把实践的整体任务分解成小的例子、代码，逐步 控制完成情况</td>
		</tr>
		<tr>
			<td>实施要点</td>
			<td>对任务进行切分，每5~20 分钟完成一小块。</td>
		</tr>
		<tr>
			<td>常见的问题</td>
			<td>从头到尾进行代码直接讲解，学生对代码理解不 深刻；学生虽然大体上理解了代码，但是被动的 理解，常见的问题依然不能解决——
				经验不够。</td>
		</tr>
	</table>
</body>
</html>
